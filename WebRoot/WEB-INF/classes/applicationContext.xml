<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
		http://www.springframework.org/schema/context   
		http://www.springframework.org/schema/context/spring-context-3.0.xsd   
		http://www.springframework.org/schema/tx   
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
		http://www.springframework.org/schema/aop    
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd" >
		<context:annotation-config />
		<context:component-scan base-package="com.entor" />
		<aop:aspectj-autoproxy />
		
		<!-- 加载jdbc.properties配置文件-->
		<context:property-placeholder location="classpath:jdbc.properties"/>
<!--	用的是c3p0的数据源	-->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
			destroy-method="close">
			<property name="driverClass">
				<value>${driver}</value>
			</property>
			<property name="jdbcUrl">
				<value>${url}</value>
			</property>
			<property name="user">
				<value>${user}</value>
			</property>
			<property name="password">
				<value>${password}</value>
			</property>
			<!-- 指定连接数据库连接池的最大连接数 -->
			<property name="maxPoolSize" value="50" />
			<!-- 指定连接数据库连接池的最小连接数 -->
			<property name="minPoolSize" value="5" />
			<!-- 指定连接数据库连接池的初始化连接数 -->
			<property name="initialPoolSize" value="10" />
			<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
			<property name="maxIdleTime" value="2000" />
		</bean>
<!--	配置hibernate sessionFactory，交给spring去管理-->
		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
<!--			依赖注入数据源-->
			<property name="dataSource" ref="dataSource" />
<!--			配置hibernate里面的映射文件-->
			<property name="mappingDirectoryLocations">
				<list>
					<value>classpath:/com/entor/model/hbm</value>
				</list>
			</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
            </prop>
<!-- 				<prop key="hibernate.hbm2ddl.auto">create</prop> -->
 				<prop key="hibernate.hbm2ddl.auto">update</prop> 
				<prop key="hibernate.jdbc.batch_size">20</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<!--二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.connection.release_mode">auto</prop>
			</props>
		</property>
		</bean>
<!--		事物管理器-->
		<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		  	<property name="sessionFactory" ref="sessionFactory"/>
		</bean>
		
		<!-- 定义事务通知,指定事务管理器 -->
		<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<!-- 设置事务行为 -->
				<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
				<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
				<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
				<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
				<tx:method name="set*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
				<tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
				<!-- 其它方法是用默认的事务行为 -->
				<tx:method name="*" propagation="NOT_SUPPORTED"/>
			</tx:attributes>
		</tx:advice>
		
		<aop:config>
			<!-- 定义切入点;确定要拦截的方法(拦截所有类DepartServiceImpl中的方法) -->
			<aop:pointcut id="filterMethods"
				expression="execution(* com.entor.service..*.*(..))" />
			<!-- 定义事务通知 -->
			<aop:advisor pointcut-ref="filterMethods" advice-ref="transactionAdvice" />
		</aop:config>
		
		<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
			<property name="sessionFactory" ref="sessionFactory"></property>	
		</bean>
		
		
</beans>